# 2f202510298e_add_repairrecord_and_attachment_models.py
"""Add RepairRecord and Attachment models

Revision ID: 2f202510298e
Revises: 5cf7a34fb560
Create Date: 2025-08-13 11:11:52.204656

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '2f202510298e'
down_revision: Union[str, Sequence[str], None] = '5cf7a34fb560'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # SQLite does not support DROP COLUMN. This column removal is handled by creating a new table.
    # op.drop_column('repair_records', 'next_service_due') # <-- ЗАКОММЕНТИРОВАНО ИЛИ УДАЛЕНО

    # Создание таблицы Attachment
    op.create_table('attachments',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('asset_id', sa.Integer(), nullable=False),
        sa.Column('original_filename', sa.String(), nullable=False),
        sa.Column('stored_filename', sa.String(), nullable=False),
        sa.Column('mime_type', sa.String(), nullable=True),
        sa.Column('file_size', sa.BigInteger(), nullable=True),
        sa.Column('upload_date', sa.DateTime(), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ), # Убедитесь, что 'assets' - правильное имя таблицы активов
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('stored_filename')
    )

    # Создание таблицы RepairRecord (без next_service_due, как в models.py)
    op.create_table('repair_records', # Убедитесь, что имя совпадает с tablename в models.py
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('asset_id', sa.Integer(), nullable=False),
        sa.Column('repair_date', sa.Date(), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.Column('cost', sa.String(), nullable=True),
        sa.Column('performed_by', sa.String(), nullable=True),
        # next_service_due intentionally omitted
        sa.Column('created_at', sa.DateTime(), nullable=True), # Или server_default=sa.func.now() если нужно
        sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ), # Убедитесь, что 'assets' - правильное имя
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Удаление таблиц в обратном порядке создания
    op.drop_table('repair_records') # Убедитесь, что имя совпадает
    op.drop_table('attachments')

    # SQLite does not support ADD COLUMN for a non-existent column in a way Alembic expects here easily.
    # Rolling back to a state with 'next_service_due' would require recreating the table.
    # op.add_column('repair_records', sa.Column('next_service_due', sa.DATE(), nullable=True)) # <-- ЗАКОММЕНТИРОВАНО ИЛИ УДАЛЕНО
    # ### end Alembic commands ###
